Index: src/main/java/com/betha/projeto/projeto/resource/FornecedorController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.betha.projeto.projeto.resource;\n\nimport com.betha.projeto.projeto.model.Cidade;\nimport com.betha.projeto.projeto.repository.CidadeRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.validation.FieldError;\nimport org.springframework.web.bind.MethodArgumentNotValidException;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.persistence.EntityNotFoundException;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@RestController\n@RequestMapping()\npublic class FornecedorController {\n    @Autowired\n    private CidadeRepository repository;\n\n    @GetMapping\n    public List<Cidade> getCidades() {\n\n        return repository.findAll();\n    }\n\n    @GetMapping(\"/{id}\")\n    public Cidade getCidadesId(@PathVariable(value = \"id\") Long cidadeId, @RequestBody Cidade cidade) throws EntityNotFoundException {\n        Cidade cidadeFind = repository.findById(cidadeId).orElseThrow(() ->new EntityNotFoundException(\"Cidade não encontrado com ID::\" +cidadeId));\n        return cidadeFind;\n    }\n\n    @PostMapping\n    public Cidade create(@RequestBody Cidade cidade) {\n        return repository.save(cidade);\n    }\n\n    @PutMapping(\"/{id}\")\n    public Cidade update(@PathVariable(value = \"id\") Long cidadeId, @RequestBody Cidade cidade) throws EntityNotFoundException {\n        Cidade cidadeFind = repository.findById(cidadeId).orElseThrow(() -> new EntityNotFoundException(\"Cidade não encontrada com 10::  \"+cidadeId));\n        cidadeFind.setId(cidade.getId());\n        cidadeFind.setNome(cidade.getNome());\n\n        return repository.save(cidadeFind);\n\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity delete(@PathVariable(value = \"id\") Long id) throws EntityNotFoundException {\n        Cidade cidadeFind = repository.findById(id)\n                .orElseThrow(() -> new EntityNotFoundException(\"Cidade não encontrada com ID::\" + id));\n\n        repository.delete(cidadeFind);\n        return ResponseEntity.noContent().build();\n    }\n\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\n    @ExceptionHandler(MethodArgumentNotValidException.class)\n    public Map<String, String> handleValidationExceptions(\n            MethodArgumentNotValidException ex) {\n        Map<String, String> errors = new HashMap<>();\n        ex.getBindingResult().getAllErrors().forEach((error) -> {\n            String fieldName = ((FieldError) error).getField();\n            String errorMessage = error.getDefaultMessage();\n            errors.put(fieldName, errorMessage);\n        });\n        return errors;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/betha/projeto/projeto/resource/FornecedorController.java b/src/main/java/com/betha/projeto/projeto/resource/FornecedorController.java
--- a/src/main/java/com/betha/projeto/projeto/resource/FornecedorController.java	(revision 79991cb0885f87944a43532e88ea91230b036104)
+++ b/src/main/java/com/betha/projeto/projeto/resource/FornecedorController.java	(date 1633178768701)
@@ -1,7 +1,9 @@
 package com.betha.projeto.projeto.resource;
 
 import com.betha.projeto.projeto.model.Cidade;
+import com.betha.projeto.projeto.model.Fornecedor;
 import com.betha.projeto.projeto.repository.CidadeRepository;
+import com.betha.projeto.projeto.repository.FornecedorRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
@@ -14,45 +16,46 @@
 import java.util.List;
 import java.util.Map;
 
-@RestController
-@RequestMapping()
-public class FornecedorController {
+    @RestController
+    @RequestMapping("/api/fornecedores")
+    public class FornecedorController {
     @Autowired
-    private CidadeRepository repository;
+    private FornecedorRepository repository;
 
     @GetMapping
-    public List<Cidade> getCidades() {
+    public List<Fornecedor> getCidades() {
 
         return repository.findAll();
     }
 
     @GetMapping("/{id}")
-    public Cidade getCidadesId(@PathVariable(value = "id") Long cidadeId, @RequestBody Cidade cidade) throws EntityNotFoundException {
-        Cidade cidadeFind = repository.findById(cidadeId).orElseThrow(() ->new EntityNotFoundException("Cidade não encontrado com ID::" +cidadeId));
-        return cidadeFind;
+    public Fornecedor getFornecedoresId(@PathVariable(value = "id") Long fornecedorId, @RequestBody Fornecedor fornecedor) throws EntityNotFoundException {
+        Fornecedor fornecedorFind = repository.findById(fornecedorId).orElseThrow(() ->new EntityNotFoundException("Fornecedor não encontrado com ID::" +fornecedorId));
+        return fornecedorFind;
     }
 
     @PostMapping
-    public Cidade create(@RequestBody Cidade cidade) {
-        return repository.save(cidade);
+    public Fornecedor create(@RequestBody Fornecedor fornecedor) {
+        return repository.save(fornecedor);
     }
 
     @PutMapping("/{id}")
-    public Cidade update(@PathVariable(value = "id") Long cidadeId, @RequestBody Cidade cidade) throws EntityNotFoundException {
-        Cidade cidadeFind = repository.findById(cidadeId).orElseThrow(() -> new EntityNotFoundException("Cidade não encontrada com 10::  "+cidadeId));
-        cidadeFind.setId(cidade.getId());
-        cidadeFind.setNome(cidade.getNome());
+    public Fornecedor update(@PathVariable(value = "id") Long fornecedorId, @RequestBody Fornecedor fornecedor) throws EntityNotFoundException {
+        Fornecedor fornecedorFind = repository.findById(fornecedorId).orElseThrow(() -> new EntityNotFoundException("Fornecedor não encontrado com ID::  "+fornecedorId));
+        fornecedorFind.setId(fornecedor.getId());
+        fornecedorFind.setNome(fornecedor.getNome());
+        fornecedorFind.setCnpj(fornecedor.getCnpj());
+        fornecedorFind.setTelefone(fornecedor.getTelefone());
 
-        return repository.save(cidadeFind);
+        return repository.save(fornecedorFind);
 
     }
 
     @DeleteMapping("/{id}")
     public ResponseEntity delete(@PathVariable(value = "id") Long id) throws EntityNotFoundException {
-        Cidade cidadeFind = repository.findById(id)
-                .orElseThrow(() -> new EntityNotFoundException("Cidade não encontrada com ID::" + id));
+        Fornecedor fornecedorFind = repository.findById(id).orElseThrow(() -> new EntityNotFoundException("Fornecedor não encontrado com ID::" + id));
 
-        repository.delete(cidadeFind);
+        repository.delete(fornecedorFind);
         return ResponseEntity.noContent().build();
     }
 
Index: src/main/java/com/betha/projeto/projeto/model/ContaUsuario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/betha/projeto/projeto/model/ContaUsuario.java b/src/main/java/com/betha/projeto/projeto/model/ContaUsuario.java
new file mode 100644
--- /dev/null	(date 1633181168428)
+++ b/src/main/java/com/betha/projeto/projeto/model/ContaUsuario.java	(date 1633181168428)
@@ -0,0 +1,15 @@
+package com.betha.projeto.projeto.model;
+
+
+public class ContaUsuario {
+    private String nomeUsuario;
+    private String nomeCompleto;
+    private String senha;
+
+
+}
+// classe normal?
+// interface?
+// get e set??
+// construtor?
+// diferenciar admin de usuario simples
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"9a198898-80e6-4d93-9c94-6e0369d9c548\" name=\"Default Changelist\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JavaFXApplication\" />\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n        <option value=\"Enum\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"1x2bQsvdqzH9X0lLrXqux9Qgpeg\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.lookFeel\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CreateClassDialog.RecentsKey\">\n      <recent name=\"com.betha.projeto.projeto.model\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"ProjetoApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.betha.projeto.projeto.ProjetoApplication\" />\n      <module name=\"projeto\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.betha.projeto.projeto.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.ProjetoApplication\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"9a198898-80e6-4d93-9c94-6e0369d9c548\" name=\"Default Changelist\" comment=\"\" />\n      <created>1629556125266</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1629556125266</updated>\n    </task>\n    <servers />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 79991cb0885f87944a43532e88ea91230b036104)
+++ b/.idea/workspace.xml	(date 1634990479821)
@@ -4,7 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9a198898-80e6-4d93-9c94-6e0369d9c548" name="Default Changelist" comment="" />
+    <list default="true" id="9a198898-80e6-4d93-9c94-6e0369d9c548" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/betha/projeto/projeto/model/ContaUsuario.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/betha/projeto/projeto/model/Cliente.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/betha/projeto/projeto/model/Cliente.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/betha/projeto/projeto/resource/ClienteController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/betha/projeto/projeto/resource/ClienteController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/betha/projeto/projeto/resource/FornecedorController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/betha/projeto/projeto/resource/FornecedorController.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -15,10 +22,13 @@
       <list>
         <option value="JavaFXApplication" />
         <option value="Interface" />
+        <option value="Enum" />
         <option value="Class" />
-        <option value="Enum" />
       </list>
     </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="1x2bQsvdqzH9X0lLrXqux9Qgpeg" />
   <component name="ProjectViewState">
@@ -28,6 +38,7 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="project.structure.last.edited" value="Project" />
     <property name="project.structure.proportion" value="0.0" />
     <property name="project.structure.side.proportion" value="0.2" />
@@ -69,4 +80,16 @@
     </task>
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1633178177167)
+++ b/.idea/vcs.xml	(date 1633178177167)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/betha/projeto/projeto/resource/ClienteController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.betha.projeto.projeto.resource;\n\nimport com.betha.projeto.projeto.model.Cliente;\nimport com.betha.projeto.projeto.repository.ClienteRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.persistence.EntityNotFoundException;\nimport java.util.List;\n\n@RestController\n@RequestMapping (\"/api/clientes/\")\npublic class ClienteController {\n\n    @Autowired\n    private ClienteRepository repository;\n\n    @GetMapping\n    public List<Cliente> getClientes() {\n\n        return repository.findAll();\n    }\n\n    @GetMapping(\"/{id}\")\n    public Cliente getClientesId(@PathVariable(value = \"id\") Long clienteId, @RequestBody Cliente cliente) throws EntityNotFoundException {\n        Cliente clienteFind = repository.findById(clienteId).orElseThrow(() ->new EntityNotFoundException(\"Cliente não encontrado com ID::\" +clienteId));\n        return clienteFind;\n    }\n\n    @PostMapping\n    public Cliente create(@RequestBody Cliente cliente) {\n\n        return repository.save(cliente);\n    }\n\n    @PutMapping(\"/{id}\")\n    public Cliente update(@PathVariable(value = \"id\") Long clienteId, @RequestBody Cliente cliente) throws EntityNotFoundException {\n        Cliente clienteFind = repository.findById(clienteId).orElseThrow(() -> new EntityNotFoundException(\"Cliente não encontrado com ID::  \"+clienteId));\n        clienteFind.setId(cliente.getId());\n        clienteFind.setNome(cliente.getNome());\n        clienteFind.setCpf(cliente.getCpf());\n        clienteFind.setRg(cliente.getRg());\n\n\n        return repository.save(clienteFind);\n\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity delete(@PathVariable(value = \"id\") Long id) throws EntityNotFoundException {\n        Cliente clienteFind = repository.findById(id)\n                .orElseThrow(() -> new EntityNotFoundException(\"Cliente não encontrado com ID::\" + id));\n\n        repository.delete(clienteFind);\n        return ResponseEntity.noContent().build();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/betha/projeto/projeto/resource/ClienteController.java b/src/main/java/com/betha/projeto/projeto/resource/ClienteController.java
--- a/src/main/java/com/betha/projeto/projeto/resource/ClienteController.java	(revision 79991cb0885f87944a43532e88ea91230b036104)
+++ b/src/main/java/com/betha/projeto/projeto/resource/ClienteController.java	(date 1633182282861)
@@ -10,7 +10,7 @@
 import java.util.List;
 
 @RestController
-@RequestMapping ("/api/clientes/")
+@RequestMapping ("/api/clientes")
 public class ClienteController {
 
     @Autowired
Index: src/main/java/com/betha/projeto/projeto/model/Cliente.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.betha.projeto.projeto.model;\n\n\nimport com.betha.projeto.projeto.enterprise.AbstractPessoa;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport java.util.List;\n\n@Entity\npublic class Cliente extends AbstractPessoa {\n    @Column(name=\"cpf\")\n    private String cpf;\n    @Column(name=\"email\")\n    private String email;\n    @Column(name=\"rg\")\n    private String rg;\n\n    public Cliente(){\n\n    }\n    public Cliente(Long id, String nome, String cpf, List<Endereco> enderecos, String email, String rg) {\n        super.setId(id);\n        super.setNome(nome);\n        this.cpf = cpf;\n        super.setEnderecos(enderecos);\n        this.email = email;\n        this.rg = rg;\n    }\n\n\n    public String getCpf() {\n        return cpf;\n    }\n\n    public void setCpf(String cpf) {\n        this.cpf = cpf;\n    }\n\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getRg() {\n        return rg;\n    }\n\n    public void setRg(String rg) {\n        this.rg = rg;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/betha/projeto/projeto/model/Cliente.java b/src/main/java/com/betha/projeto/projeto/model/Cliente.java
--- a/src/main/java/com/betha/projeto/projeto/model/Cliente.java	(revision 79991cb0885f87944a43532e88ea91230b036104)
+++ b/src/main/java/com/betha/projeto/projeto/model/Cliente.java	(date 1633181168458)
@@ -15,6 +15,12 @@
     private String email;
     @Column(name="rg")
     private String rg;
+    @Column(name="tipoDocumento")
+    private Documento documento;
+    @Column(name="sexo")
+    private Sexo sexo;
+    @Column(name = "Raca")
+    private Raca raca;
 
     public Cliente(){
 
